def solution(사람들: list, 제한: int) -> int:
    from collections import deque

    정답 = 0
    사람들.sort()
    사람들 = deque(사람들)

    """
    조건
    1. 한보트에는 2명씩탐
    2. 제한무게는 사람들의 몸무게 중 최댓값보다 크게 주어짐
    
    한보트에 2명씩 탈수있으므로 가장무거운 사람과 가장가벼운사람끼리 태운후 제한무게가 안넘을시 가벼운사람과 무거운사람빼고
    제한무게가 넘으면 무거운사람만빼고 그다음 무거운사람으로 비교한다.
    
    제한무게 미달시 둘다빼는이유 : 이미 탈수있는 조건을 충족했으므로 보트 카운트를올려주고 다른사람들을 태우기위함
    제한무게 초과시 무거운사람만 빼는이유 : 무거운사람 혼자라도 탈수있으므로 카운트올려주고 그다음 무거운사람을 태우기위함
    """
    while 사람들:
        if len(사람들) > 1 and 사람들[0] + 사람들[len(사람들) - 1] <= 제한:
            사람들.popleft()
        사람들.pop()
        정답 += 1
    return 정답


def solution1(사람들: list, 제한: int) -> int:
    """
    인덱스로 접근하는풀이
    """
    정답 = 0
    사람들.sort()
    최소값 = 0
    최대값 = len(사람들) - 1

    while 최소값 <= 최대값:
        if 사람들[최소값] + 사람들[최대값] <= 제한:
            최소값 += 1
        최대값 -= 1
        정답 += 1
    return 정답


# [40,40,50,60], 제한 : 200
# 50 50 70 80
print(solution([70, 50, 80, 50], 100))
print(solution([70, 80, 50], 100))
print(solution([30, 40, 60, 70], 100))
