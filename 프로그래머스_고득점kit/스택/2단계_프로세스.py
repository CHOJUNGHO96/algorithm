def solution(순서: list, 위치: int) -> int:
    """
    조건
    1. 만약 그런 프로세스가 없다면 방금 꺼낸 프로세스를 실행합니다. ->> 가장큰거는 먼저 실행을시켜준다
    2. 한 번 실행한 프로세스는 다시 큐에 넣지 않고 그대로 종료됩니다. ->> 실행시킨거는 다시 큐에 안넣는다

    주의
    1. 연속된 알파벳이니깐 A~Z까지 문자를안만들고 인덱스로풀이한다
    2. any 함수를 이용하여 큐안에 원하는조건(큐안에 popleft한 값보다 큰게있는지)이 True 인지 확인한다
    """
    from collections import deque

    정답 = 0

    # 우선순위와 알파벳을 대신한 인덱스를 포함한큐 생성
    큐 = deque([(우선순위, 인덱스) for 인덱스, 우선순위 in enumerate(순서)])
    while 큐:
        뺀값 = 큐.popleft()
        # 큐에 방금 꺼낸 프로세스보다 우선순위가 큰값이있는지 체크후 있으면 appned
        if any(뺀값[0] < 값[0] for 값 in 큐):
            큐.append(뺀값)
        else:
            # 제일큰값이 중복일수있으므로 +1 해준다
            정답 += 1

            # 뺀값의 알파벳과 같으면 break
            if 뺀값[1] == 위치:
                break

    return 정답


print(solution([1, 1, 9, 1, 1, 1], 0))
